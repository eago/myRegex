现代的正则引擎会强迫进行驱动过程，所以同一位置不会发生两次长度为0的匹配

"(\\.|[^\\"])*" --匹配双引号内的字符， 允许任何转义字符（包括转义的引号）

判断正则引擎的方法 ：
"([^\\"]+|\\.)*"
不能匹配也能很快给出结果 -DFA
只有匹配时才能很快给出结果 -NFA
总是很慢 -POSIX NFA （因为总是要尝试所有的可能性， + 与 * 的作用域造成指数增长）

如果无法匹配， 传统型 NFA 必须进行的尝试与 POSIX NFA 一样多

多选结构的代价很高（回溯的主要原因），尽量使用字符组

应用程序所提供的三种处理正则表达式的方式 ：集成式， 程序式 和 面向对象式

